{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Backend API Server.",
    "version": "1.0.0"
  },
  "host": "feed-demo.dev.lightricks.com",
  "basePath": "/api/v1",
  "paths": {
    "/media/instructions": {
      "post": {
        "description": "Get instructions info for uploading files",
        "tags": [
          "media"
        ],
        "operationId": "GetInstructions",
        "parameters": [
          {
            "type": "string",
            "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClientId",
            "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45",
            "name": "x-lightricks-client-id",
            "in": "header",
            "required": true
          },
          {
            "name": "InstructionsGetRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/InstructionsGetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/InstructionsGetResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      }
    },
    "/media/metadata": {
      "get": {
        "description": "Query Media items",
        "tags": [
          "media"
        ],
        "operationId": "GetMetadata",
        "parameters": [
          {
            "type": "string",
            "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClientId",
            "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45",
            "name": "x-lightricks-client-id",
            "in": "header",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-go-name": "MediaIds",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/MediaMetadataGetResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      }
    },
    "/media/status": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Check media status (health).",
        "operationId": "statusEndpoint",
        "responses": {
          "200": {
            "$ref": "#/responses/statusResponse"
          }
        }
      }
    },
    "/media/upload": {
      "post": {
        "description": "Upload media to storage with external link",
        "tags": [
          "media"
        ],
        "operationId": "UploadMedia",
        "parameters": [
          {
            "type": "string",
            "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClientId",
            "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45",
            "name": "x-lightricks-client-id",
            "in": "header",
            "required": true
          },
          {
            "name": "FileUploadRequestBody",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FileUploadRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/FileUploadResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      }
    },
    "/media/{media_id}": {
      "get": {
        "description": "Get Media by id",
        "tags": [
          "media"
        ],
        "operationId": "GetMetadataById",
        "parameters": [
          {
            "type": "string",
            "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClientId",
            "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45",
            "name": "x-lightricks-client-id",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "MediaId",
            "name": "media_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/MediaMetadataGetByIdResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      },
      "patch": {
        "tags": [
          "media"
        ],
        "summary": "Transform an existing media to streamable format.",
        "operationId": "PatchMedia",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "MediaId",
            "name": "media_id",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchMediaRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/statusResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorBody": {
      "type": "object",
      "properties": {
        "error_code": {
          "$ref": "#/definitions/ExternalErrorCode"
        },
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/common/pkg/http/errors"
    },
    "ExternalErrorCode": {
      "type": "string",
      "x-go-package": "github.com/Lightricks/atlas-core/common/pkg/http/errors"
    },
    "FileUploadRequest": {
      "type": "object",
      "required": [
        "Authorization",
        "x-lightricks-client-id"
      ],
      "properties": {
        "Authorization": {
          "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"\nin: header",
          "type": "string"
        },
        "FileUploadRequestBody": {
          "$ref": "#/definitions/FileUploadRequestBody"
        },
        "x-lightricks-client-id": {
          "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45\nin: header",
          "type": "string",
          "x-go-name": "ClientId"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "FileUploadRequestBody": {
      "type": "object",
      "properties": {
        "content_type": {
          "description": "in: body",
          "type": "string",
          "x-go-name": "ContentType"
        },
        "file_url": {
          "description": "in: body",
          "type": "string",
          "x-go-name": "FileUrl"
        },
        "metadata": {
          "$ref": "#/definitions/MetaDataModel"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "FileUploadResponseBody": {
      "type": "object",
      "properties": {
        "media_id": {
          "type": "string",
          "x-go-name": "MediaId"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "HttpInstruction": {
      "description": "HttpInstruction includes instructions for uploading files in http protocol",
      "type": "object",
      "properties": {
        "form_data_parts": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "FormDataParts"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Headers"
        },
        "http_protocol": {
          "type": "string",
          "x-go-name": "HttpProtocol"
        },
        "url": {
          "type": "string",
          "x-go-name": "Url"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "Instruction": {
      "type": "object",
      "properties": {
        "account_id": {
          "type": "string",
          "x-go-name": "AccountId"
        },
        "client_id": {
          "type": "string",
          "x-go-name": "ClientId"
        },
        "http_instruction": {
          "$ref": "#/definitions/HttpInstruction"
        },
        "media_id": {
          "type": "string",
          "x-go-name": "MediaId"
        },
        "media_resource_status": {
          "type": "string",
          "enum": [
            "Started",
            "Uploaded",
            "Ready",
            "Error"
          ],
          "x-go-name": "MediaResourceStatus"
        },
        "resource_type": {
          "description": "Original/thumbnail100_100/transcoded/streamable",
          "type": "string",
          "x-go-name": "ResourceType"
        },
        "token_expiration_at_ms": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "TokenExpirationInMinutes"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "InstructionsGetRequest": {
      "type": "object",
      "required": [
        "file_size",
        "file_content_md5"
      ],
      "properties": {
        "file_content_md5": {
          "description": "in: body",
          "type": "string",
          "x-go-name": "FileContentMd5"
        },
        "file_size": {
          "description": "in: body",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "FileSize"
        },
        "metadata": {
          "$ref": "#/definitions/MetaDataModel"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "MetaDataModel": {
      "type": "object",
      "properties": {
        "animation_type": {
          "type": "string",
          "x-go-name": "AnimationType"
        },
        "audio_channels": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "AudioChannels"
        },
        "audio_sample_rate": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "AudioSampleRate"
        },
        "average_fps": {
          "type": "number",
          "format": "float",
          "x-go-name": "AverageFps"
        },
        "content_type": {
          "type": "string",
          "x-go-name": "ContentType"
        },
        "duration_ms": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "DurationMs"
        },
        "exif_creation_date_ms": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ExifCreationDateMs"
        },
        "height": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Height"
        },
        "local_identifier": {
          "type": "string",
          "x-go-name": "LocalIdentifier"
        },
        "width": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Width"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "account_id": {
          "description": "Account id that uploaded the media",
          "type": "string",
          "x-go-name": "AccountId"
        },
        "media_id": {
          "type": "string",
          "x-go-name": "MediaId"
        },
        "media_resources": {
          "description": "media auto generated files with different protocols. valid only when the status is \"ready\".",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          },
          "x-go-name": "MediaResources"
        },
        "media_status": {
          "type": "string",
          "enum": [
            "Started",
            "Uploaded",
            "Ready",
            "Error"
          ],
          "x-go-name": "MediaStatus"
        },
        "media_type": {
          "type": "string",
          "x-go-name": "MediaType"
        },
        "metadata": {
          "$ref": "#/definitions/MetaDataModel"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "PatchMediaRequestBody": {
      "type": "object",
      "required": [
        "transformation"
      ],
      "properties": {
        "transformation": {
          "description": "in: body",
          "type": "string",
          "x-go-name": "Transformation"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "Resource": {
      "type": "object",
      "properties": {
        "average_fps": {
          "type": "number",
          "format": "float",
          "x-go-name": "AverageFps"
        },
        "codec": {
          "type": "string",
          "x-go-name": "Codec"
        },
        "content_type": {
          "type": "string",
          "x-go-name": "ContentType"
        },
        "height": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Height"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "original",
            "preview",
            "thumbnail",
            "transcoded",
            "streamable"
          ],
          "x-go-name": "ResourceType"
        },
        "url": {
          "type": "string",
          "x-go-name": "Url"
        },
        "width": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Width"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    }
  },
  "responses": {
    "ErrorWrapper": {
      "description": "Relevant for all error codes (4XX, 5XX). While the message can change the error_code shouldn't (id of the error).",
      "schema": {
        "$ref": "#/definitions/ErrorBody"
      }
    },
    "FileUploadResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/FileUploadResponseBody"
      }
    },
    "InstructionsGetResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Instruction"
      }
    },
    "MediaMetadataGetByIdResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Metadata"
      }
    },
    "MediaMetadataGetResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Metadata"
        }
      }
    },
    "StatusResponse": {
      "description": "",
      "headers": {
        "status": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic"
    }
  }
}