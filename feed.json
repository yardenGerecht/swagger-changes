{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Backend API Server.",
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/feed": {
      "get": {
        "tags": [
          "feed"
        ],
        "summary": "Get Feed with default type (for you feed).",
        "operationId": "getFeed",
        "parameters": [
          {
            "type": "string",
            "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClientId",
            "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45",
            "name": "x-lightricks-client-id",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "Limit",
            "description": "Optional- if not set default value is 12. Max value: 50. Min value: 4",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "PageToken",
            "description": "This is used for pagination in feed session. When starting a new feed session, page token should be null.\nIn next requests, page token is some kind of complex cursor.\nThe link to the next page (in the Link response header) contains the page token and you shouldn't set it yourself.",
            "name": "page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getFeedResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      }
    },
    "/feed/posts/accounts/me": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "Get my posts by account id with pagination.",
        "operationId": "getMyPostsOfAccount",
        "parameters": [
          {
            "type": "string",
            "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClientId",
            "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45",
            "name": "x-lightricks-client-id",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "NextPageToken",
            "description": "Token to be used in order to get next result set.",
            "name": "next_page_token",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "example": 12,
            "x-go-name": "Limit",
            "description": "Max number of items to return.\nDefault value is 12.",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getPostsForAccountResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      }
    },
    "/feed/posts/accounts/me/liked": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "Get  posts liked by me with pagination.",
        "operationId": "getMyLikedPostsOfAccount",
        "parameters": [
          {
            "type": "string",
            "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClientId",
            "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45",
            "name": "x-lightricks-client-id",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "NextPageToken",
            "description": "Token to be used in order to get next result set.",
            "name": "next_page_token",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "example": 12,
            "x-go-name": "Limit",
            "description": "Max number of items to return.\nDefault value is 12.",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getPostsForAccountResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      }
    },
    "/feed/posts/accounts/me/saved": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "Get my saved posts with pagination.",
        "operationId": "getMySavedPosts",
        "parameters": [
          {
            "type": "string",
            "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClientId",
            "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45",
            "name": "x-lightricks-client-id",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "NextPageToken",
            "description": "Token to be used in order to get next result set.",
            "name": "next_page_token",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "example": 12,
            "x-go-name": "Limit",
            "description": "Max number of items to return.\nDefault value is 12.",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getPostsForAccountResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      }
    },
    "/feed/posts/accounts/{account_id}": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "Get posts by account id with pagination. Supports \"me\" as account id.",
        "operationId": "getPostsOfAccount",
        "parameters": [
          {
            "type": "string",
            "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClientId",
            "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45",
            "name": "x-lightricks-client-id",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "NextPageToken",
            "description": "Token to be used in order to get next result set.",
            "name": "next_page_token",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "example": 12,
            "x-go-name": "Limit",
            "description": "Max number of items to return.\nDefault value is 12.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "AccountId",
            "description": "type: string",
            "name": "account_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getPostsForAccountResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      }
    },
    "/feed/posts/accounts/{account_id}/liked": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "Get posts liked by user with pagination.",
        "operationId": "getLikedPostsOfAccount",
        "parameters": [
          {
            "type": "string",
            "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClientId",
            "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45",
            "name": "x-lightricks-client-id",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "NextPageToken",
            "description": "Token to be used in order to get next result set.",
            "name": "next_page_token",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "example": 12,
            "x-go-name": "Limit",
            "description": "Max number of items to return.\nDefault value is 12.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "AccountId",
            "description": "type: string",
            "name": "account_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getPostsForAccountResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      }
    },
    "/feed/posts/{post_id}": {
      "get": {
        "description": "Get post by id. In case post is not added to feed yet, or post not fond, 404 is returned",
        "tags": [
          "post"
        ],
        "operationId": "getPostItem",
        "parameters": [
          {
            "type": "string",
            "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClientId",
            "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45",
            "name": "x-lightricks-client-id",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "PostId",
            "description": "type: string",
            "name": "post_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getPostItemResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorWrapper"
          },
          "404": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      }
    },
    "/feed/status": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Check feed status (health).",
        "operationId": "statusEndpoint",
        "responses": {
          "200": {
            "$ref": "#/responses/statusResponse"
          }
        }
      }
    },
    "/feed/{feed_type}": {
      "get": {
        "tags": [
          "feed"
        ],
        "summary": "Get Feed by type.",
        "operationId": "getFeedWithExplicitType",
        "parameters": [
          {
            "type": "string",
            "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClientId",
            "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45",
            "name": "x-lightricks-client-id",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "Limit",
            "description": "Optional- if not set default value is 12. Max value: 50. Min value: 4",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "PageToken",
            "description": "This is used for pagination in feed session. When starting a new feed session, page token should be null.\nIn next requests, page token is some kind of complex cursor.\nThe link to the next page (in the Link response header) contains the page token and you shouldn't set it yourself.",
            "name": "page_token",
            "in": "query"
          },
          {
            "enum": [
              "for_you",
              "following"
            ],
            "type": "string",
            "x-go-name": "FeedType",
            "name": "feed_type",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getFeedResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      }
    }
  },
  "definitions": {
    "CreatorProfile": {
      "type": "object",
      "properties": {
        "account_id": {
          "type": "string",
          "x-go-name": "AccountId"
        },
        "profile_picture": {
          "$ref": "#/definitions/Metadata"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-feed/pkg/api/feed/model"
    },
    "ErrorBody": {
      "type": "object",
      "properties": {
        "error_code": {
          "$ref": "#/definitions/ExternalErrorCode"
        },
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/common/pkg/http/errors"
    },
    "ExamplePosts": {
      "type": "object",
      "properties": {
        "example_how_tutorial_post_looks_like": {
          "$ref": "#/definitions/GetTutorialPostResponse"
        },
        "example_how_videoleap_template_post_looks_like": {
          "$ref": "#/definitions/GetVideoleapTemplatePostResponse"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-feed/pkg/api/feed/model"
    },
    "ExternalErrorCode": {
      "type": "string",
      "x-go-package": "github.com/Lightricks/atlas-core/common/pkg/http/errors"
    },
    "FileUploadRequest": {
      "type": "object",
      "required": [
        "Authorization",
        "x-lightricks-client-id"
      ],
      "properties": {
        "Authorization": {
          "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"\nin: header",
          "type": "string"
        },
        "FileUploadRequestBody": {
          "$ref": "#/definitions/FileUploadRequestBody"
        },
        "x-lightricks-client-id": {
          "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45\nin: header",
          "type": "string",
          "x-go-name": "ClientId"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "FileUploadRequestBody": {
      "type": "object",
      "required": [
        "metadata"
      ],
      "properties": {
        "content_type": {
          "description": "in: body",
          "type": "string",
          "x-go-name": "ContentType"
        },
        "file_url": {
          "description": "in: body",
          "type": "string",
          "x-go-name": "FileUrl"
        },
        "metadata": {
          "$ref": "#/definitions/MetaDataModel"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "GetFeedResponseBody": {
      "description": "Posts is a list of feed item from different types. Each feed item contains \"type\" of feed item\nit is. Each feed item type has different fields. Response only contains a list of feed items (\"posts\").\nThe other fields are examples of how each feed item type will look like (unfortunately swagger 2.0 doesn't\nsupport anyOf).",
      "type": "object",
      "properties": {
        "example_how_tutorial_post_looks_like": {
          "$ref": "#/definitions/GetTutorialPostResponse"
        },
        "example_how_videoleap_template_post_looks_like": {
          "$ref": "#/definitions/GetVideoleapTemplatePostResponse"
        },
        "next_page_link": {
          "description": "Link to be used in order to get next result set. Altering the link might result in undefined results.\nThe client can assume that the prefix up to the first question mark is the same as the end point from which\nthe response was received.",
          "type": "string",
          "x-go-name": "NextPageLink"
        },
        "posts": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "x-go-name": "Posts"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-feed/pkg/api/feed/model"
    },
    "GetPostsForAccountResponseBody": {
      "type": "object",
      "properties": {
        "example_how_tutorial_post_looks_like": {
          "$ref": "#/definitions/GetTutorialPostResponse"
        },
        "example_how_videoleap_template_post_looks_like": {
          "$ref": "#/definitions/GetVideoleapTemplatePostResponse"
        },
        "next_page_link": {
          "description": "Link to be used in order to get next result set. Altering the link might result in undefined results.\nThe client can assume that the prefix up to the first question mark is the same as the end point from which\nthe response was received.",
          "type": "string",
          "x-go-name": "NextPageLink"
        },
        "posts": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "x-go-name": "Posts"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-feed/pkg/api/feed/model"
    },
    "GetTutorialPostResponse": {
      "type": "object",
      "required": [
        "id",
        "preview_media",
        "type",
        "creation_date_ms",
        "social_metadata"
      ],
      "properties": {
        "creation_date_ms": {
          "description": "Epoch time of template creation",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreationDateMS",
          "example": 1634100851
        },
        "creator_profile": {
          "$ref": "#/definitions/CreatorProfile"
        },
        "id": {
          "type": "string",
          "x-go-name": "Id"
        },
        "number_of_times_used": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "NumberOfTimesUsed"
        },
        "preview_media": {
          "$ref": "#/definitions/Metadata"
        },
        "social_metadata": {
          "$ref": "#/definitions/SocialMetadata"
        },
        "subtitle": {
          "type": "string",
          "x-go-name": "Subtitle"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        },
        "type": {
          "type": "string",
          "enum": [
            "[videoleap_template",
            " tutorial]"
          ],
          "x-go-name": "Type"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-feed/pkg/api/feed/model"
    },
    "GetVideoleapTemplatePostResponse": {
      "type": "object",
      "required": [
        "id",
        "preview_media",
        "type",
        "creation_date_ms",
        "social_metadata",
        "properties",
        "is_pro",
        "template_id"
      ],
      "properties": {
        "creation_date_ms": {
          "description": "Epoch time of template creation",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreationDateMS",
          "example": 1634100851
        },
        "creator_profile": {
          "$ref": "#/definitions/CreatorProfile"
        },
        "id": {
          "type": "string",
          "x-go-name": "Id"
        },
        "is_pro": {
          "type": "boolean",
          "x-go-name": "IsPro"
        },
        "number_of_times_used": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "NumberOfTimesUsed"
        },
        "preview_media": {
          "$ref": "#/definitions/Metadata"
        },
        "properties": {
          "$ref": "#/definitions/VideoleapTemplateProperties"
        },
        "social_metadata": {
          "$ref": "#/definitions/SocialMetadata"
        },
        "subtitle": {
          "type": "string",
          "x-go-name": "Subtitle"
        },
        "template_id": {
          "type": "string",
          "x-go-name": "TemplateId"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        },
        "type": {
          "type": "string",
          "enum": [
            "[videoleap_template",
            " tutorial]"
          ],
          "x-go-name": "Type"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-feed/pkg/api/feed/model"
    },
    "HttpInstruction": {
      "description": "HttpInstruction includes instructions for uploading files in http protocol",
      "type": "object",
      "required": [
        "http_protocol",
        "url",
        "headers",
        "form_data_parts"
      ],
      "properties": {
        "form_data_parts": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "FormDataParts"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Headers"
        },
        "http_protocol": {
          "type": "string",
          "x-go-name": "HttpProtocol"
        },
        "url": {
          "type": "string",
          "x-go-name": "Url"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "Instruction": {
      "type": "object",
      "required": [
        "token_expiration_at_ms",
        "media_id",
        "account_id",
        "resource_type",
        "http_instruction"
      ],
      "properties": {
        "account_id": {
          "type": "string",
          "x-go-name": "AccountId"
        },
        "http_instruction": {
          "$ref": "#/definitions/HttpInstruction"
        },
        "media_id": {
          "type": "string",
          "x-go-name": "MediaId"
        },
        "resource_type": {
          "description": "Original/thumbnail100_100/transcoded/streamable",
          "type": "string",
          "x-go-name": "ResourceType"
        },
        "token_expiration_at_ms": {
          "description": "In how many milliseconds, this token will expire.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "TokenExpirationInMs"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "InstructionsGetRequest": {
      "type": "object",
      "required": [
        "file_content_md5",
        "metadata"
      ],
      "properties": {
        "file_content_md5": {
          "description": "Provides a message-integrity check for the file.",
          "type": "string",
          "x-go-name": "FileContentMd5"
        },
        "metadata": {
          "$ref": "#/definitions/PostInstructionsMetaData"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "MetaDataModel": {
      "type": "object",
      "required": [
        "content_type"
      ],
      "properties": {
        "content_type": {
          "type": "string",
          "x-go-name": "ContentType"
        },
        "duration_ms": {
          "description": "Required for videos.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DurationMs"
        },
        "height": {
          "description": "Required for videos and images.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Height"
        },
        "width": {
          "description": "Required for videos and images.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Width"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "account_id": {
          "description": "Account id that uploaded the media",
          "type": "string",
          "x-go-name": "AccountId"
        },
        "media_id": {
          "type": "string",
          "x-go-name": "MediaId"
        },
        "media_resources": {
          "description": "media auto generated files with different protocols. valid only when the status is \"ready\".",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          },
          "x-go-name": "MediaResources"
        },
        "media_status": {
          "type": "string",
          "enum": [
            "Started",
            "Uploaded",
            "Ready",
            "Error"
          ],
          "x-go-name": "MediaStatus"
        },
        "media_type": {
          "type": "string",
          "x-go-name": "MediaType"
        },
        "metadata": {
          "$ref": "#/definitions/PostInstructionsMetaData"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "PatchMediaRequestBody": {
      "type": "object",
      "required": [
        "transformation"
      ],
      "properties": {
        "transformation": {
          "description": "in: body",
          "type": "string",
          "x-go-name": "Transformation"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "PostInstructionsMetaData": {
      "type": "object",
      "required": [
        "content_type",
        "file_size"
      ],
      "properties": {
        "content_type": {
          "type": "string",
          "x-go-name": "ContentType"
        },
        "duration_ms": {
          "description": "Required for videos.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DurationMs"
        },
        "file_size": {
          "description": "File size in bytes",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "FileSize"
        },
        "height": {
          "description": "Required for videos and images.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Height"
        },
        "width": {
          "description": "Required for videos and images.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Width"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "Resource": {
      "type": "object",
      "properties": {
        "content_type": {
          "type": "string",
          "x-go-name": "ContentType"
        },
        "height": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Height"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "original",
            "preview",
            "thumbnail",
            "transcoded",
            "streamable"
          ],
          "x-go-name": "ResourceType"
        },
        "url": {
          "type": "string",
          "x-go-name": "Url"
        },
        "width": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Width"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "SocialMetadata": {
      "type": "object",
      "required": [
        "liked_by_me",
        "saved_by_me",
        "following_creator",
        "likes"
      ],
      "properties": {
        "following_creator": {
          "type": "boolean",
          "x-go-name": "FollowingCreator"
        },
        "liked_by_me": {
          "type": "boolean",
          "x-go-name": "LikedByMe"
        },
        "likes": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Likes"
        },
        "saved_by_me": {
          "type": "boolean",
          "x-go-name": "SavedByMe"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-feed/pkg/api/feed/model"
    },
    "StatusResponse": {
      "type": "object",
      "title": "StatusResponse represents body of status response.",
      "properties": {
        "status": {
          "type": "string",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-feed/pkg/api"
    },
    "VideoleapTemplateProperties": {
      "type": "object",
      "required": [
        "width",
        "height",
        "number_of_clips_used",
        "duration_ms"
      ],
      "properties": {
        "duration_ms": {
          "description": "Duration of template in milliseconds.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DurationMs",
          "example": 9000
        },
        "height": {
          "description": "Height of template in pixels.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Height",
          "example": 1080
        },
        "number_of_clips_used": {
          "description": "Number of clips used by the template.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "NumberOfClipsUsed",
          "example": 3
        },
        "width": {
          "description": "Width of template in pixels.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Width",
          "example": 720
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-feed/pkg/api/feed/model"
    }
  },
  "responses": {
    "ErrorWrapper": {
      "description": "Relevant for all error codes (4XX, 5XX). While the message can change the error_code shouldn't (id of the error).",
      "schema": {
        "$ref": "#/definitions/ErrorBody"
      }
    },
    "InstructionsGetResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Instruction"
      }
    },
    "MediaMetadataGetByIdResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Metadata"
      }
    },
    "MediaMetadataGetResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Metadata"
        }
      }
    },
    "StatusResponse": {
      "description": "",
      "headers": {
        "status": {
          "type": "string"
        }
      }
    },
    "getFeedResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/GetFeedResponseBody"
      },
      "headers": {
        "Link": {
          "type": "string",
          "description": "Link contains information about pagination. In current implementation it only contains link to the next page.\nIf there is no next page response won't contain link header.\nin: header\nrequired: true"
        }
      }
    },
    "getPostItemResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ExamplePosts"
      },
      "headers": {
        "Body": {}
      }
    },
    "getPostsOfAccountResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/GetPostsForAccountResponseBody"
      },
      "headers": {
        "Body": {},
        "X-Total-Count": {
          "type": "string",
          "description": "Max total number of items.\nin: header\nrequired: true"
        }
      }
    },
    "statusResponse": {
      "description": "Status of feed.",
      "schema": {
        "$ref": "#/definitions/StatusResponse"
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic"
    }
  }
}