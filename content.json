{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Backend API Server.",
    "version": "1.0.0"
  },
  "host": "feed-demo.dev.lightricks.com",
  "basePath": "/api/v1",
  "paths": {
    "/content/posts/templates": {
      "post": {
        "tags": [
          "post"
        ],
        "operationId": "postVideoleapTemplatePost",
        "parameters": [
          {
            "type": "string",
            "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClientId",
            "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45",
            "name": "x-lightricks-client-id",
            "in": "header",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostVideoleapTemplatePostRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/postVideoleapTemplatePostResponse"
          },
          "400": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      }
    },
    "/content/posts/tutorials": {
      "post": {
        "tags": [
          "post"
        ],
        "summary": "Private endpoint. Only autherized users can add tutorials.",
        "operationId": "postTutorialPost",
        "parameters": [
          {
            "type": "string",
            "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClientId",
            "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45",
            "name": "x-lightricks-client-id",
            "in": "header",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostPostRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/postTutorialPost"
          },
          "400": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      }
    },
    "/content/status": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Check template status (health).",
        "operationId": "statusEndpoint",
        "responses": {
          "200": {
            "$ref": "#/responses/statusResponse"
          }
        }
      }
    },
    "/content/templates": {
      "post": {
        "tags": [
          "template"
        ],
        "operationId": "postTemplateRequest",
        "parameters": [
          {
            "type": "string",
            "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClientId",
            "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45",
            "name": "x-lightricks-client-id",
            "in": "header",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TemplateRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/postTemplateResponse"
          },
          "401": {
            "$ref": "#/responses/ErrorWrapper"
          },
          "500": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      }
    },
    "/content/templates/{template_id}": {
      "get": {
        "tags": [
          "template"
        ],
        "summary": "Get template by template id.",
        "operationId": "getTemplateRequest",
        "parameters": [
          {
            "type": "string",
            "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ClientId",
            "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45",
            "name": "x-lightricks-client-id",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "TemplateId",
            "name": "template_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-go-name": "Embed",
            "description": "Fields to be embedded in response.\nIn this case, only these fields are supported: [\"assets\", required_capabilities,\"metadata\"\"].\nThis is how it should look in the uri: ...embed=assets\u0026embed=metadata...",
            "name": "embed",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getTemplateResponse"
          },
          "404": {
            "$ref": "#/responses/ErrorWrapper"
          },
          "500": {
            "$ref": "#/responses/ErrorWrapper"
          }
        }
      }
    }
  },
  "definitions": {
    "Asset": {
      "type": "object",
      "required": [
        "media_id"
      ],
      "properties": {
        "asset_key": {
          "description": "A key attached to the asset.",
          "type": "string",
          "x-go-name": "AssetKey",
          "example": "my_awesome_pic"
        },
        "media_id": {
          "description": "Media id for asset provided by media upload api.",
          "type": "string",
          "x-go-name": "MediaId",
          "example": "=AB\u002612345"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-content/pkg/api/template/http_model"
    },
    "CreatorProfile": {
      "type": "object",
      "properties": {
        "account_id": {
          "type": "string",
          "x-go-name": "AccountId"
        },
        "profile_picture": {
          "$ref": "#/definitions/Metadata"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-content/pkg/api/post/http_model"
    },
    "ErrorBody": {
      "type": "object",
      "properties": {
        "error_code": {
          "$ref": "#/definitions/ExternalErrorCode"
        },
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/common/pkg/http/errors"
    },
    "ExamplePosts": {
      "type": "object",
      "properties": {
        "example_how_tutorial_post_looks_like": {
          "$ref": "#/definitions/GetTutorialPostResponse"
        },
        "example_how_videoleap_template_post_looks_like": {
          "$ref": "#/definitions/GetVideoleapTemplatePostResponse"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-content/pkg/api/post/http_model"
    },
    "ExternalErrorCode": {
      "type": "string",
      "x-go-package": "github.com/Lightricks/atlas-core/common/pkg/http/errors"
    },
    "FileUploadRequest": {
      "type": "object",
      "required": [
        "Authorization",
        "x-lightricks-client-id"
      ],
      "properties": {
        "Authorization": {
          "description": "Should contain Fortress token (JWT) as bearer token.  Value format: \"Bearer {User's Fortress token}\"\nin: header",
          "type": "string"
        },
        "FileUploadRequestBody": {
          "$ref": "#/definitions/FileUploadRequestBody"
        },
        "x-lightricks-client-id": {
          "description": "Installation identifier. Should be: {platform}\\:{app name}:{platform id}.\nWhere platform id is installation id in android and id for vendor in iOS.\ne.g. videoleap Android: android:videoleap:01FEAE4TX8B5RR8ENAZJT2CBDK\ne.g. artleap iOS: ios:artleap:B55C2749-2B68-4371-92AE-D0CB18ACFF45\nin: header",
          "type": "string",
          "x-go-name": "ClientId"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "FileUploadRequestBody": {
      "type": "object",
      "properties": {
        "content_type": {
          "description": "in: body",
          "type": "string",
          "x-go-name": "ContentType"
        },
        "file_url": {
          "description": "in: body",
          "type": "string",
          "x-go-name": "FileUrl"
        },
        "metadata": {
          "$ref": "#/definitions/MetaDataModel"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "FileUploadResponseBody": {
      "type": "object",
      "properties": {
        "media_id": {
          "type": "string",
          "x-go-name": "MediaId"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "GetTemplateResponseBody": {
      "type": "object",
      "required": [
        "client_version_code",
        "template_asset_id",
        "type",
        "required_capabilities",
        "creation_date_ms",
        "properties"
      ],
      "properties": {
        "client_version_code": {
          "description": "Client version code number. Must be aligned with version specified in register.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ClientVersionCode",
          "example": 1580
        },
        "creation_date_ms": {
          "description": "Epoch time of template creation",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreationDateMS",
          "example": 1634100851
        },
        "media_asset_ids": {
          "description": "Assets associated to the template.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          },
          "x-go-name": "MediaAssetIds"
        },
        "media_assets": {
          "description": "Media assets used by template.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateMediaAsset"
          },
          "x-go-name": "MediaAssets"
        },
        "metadata": {
          "description": "A store of key values properties related to the template.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Metadata",
          "example": {
            "embedding": "1000101000",
            "used_features": "sky, stickers, text"
          }
        },
        "parent_template_id": {
          "description": "ID of the template that the current template is based on",
          "type": "string",
          "x-go-name": "ParentTemplateID"
        },
        "properties": {
          "$ref": "#/definitions/VideoleapTemplateProperties"
        },
        "required_capabilities": {
          "description": "List of capabilities codes required by a client to support the template.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "RequiredCapabilities",
          "example": [
            "audio_speed_very_slow",
            "text_shadow_softness"
          ]
        },
        "template_asset": {
          "$ref": "#/definitions/Metadata"
        },
        "template_asset_id": {
          "description": "Media id of the file containing the template definition.",
          "type": "string",
          "x-go-name": "TemplateAssetId",
          "example": "=AB\u002612345"
        },
        "template_id": {
          "description": "Optional identifier for template, if nil, an uuid is generated.",
          "type": "string",
          "x-go-name": "TemplateId",
          "example": "0e3c5cde-55a0-11ec-bf63-0242ac130002"
        },
        "type": {
          "description": "Defines the type of the template.",
          "type": "string",
          "x-go-name": "Type",
          "example": "videoleap_template"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-content/pkg/api/template/http_model"
    },
    "GetTutorialPostResponse": {
      "type": "object",
      "required": [
        "id",
        "preview_media",
        "type",
        "creation_date_ms"
      ],
      "properties": {
        "creation_date_ms": {
          "description": "Epoch time of template creation",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreationDateMS",
          "example": 1634100851
        },
        "creator_profile": {
          "$ref": "#/definitions/CreatorProfile"
        },
        "id": {
          "type": "string",
          "x-go-name": "Id"
        },
        "preview_media": {
          "$ref": "#/definitions/Metadata"
        },
        "subtitle": {
          "type": "string",
          "x-go-name": "Subtitle"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        },
        "type": {
          "type": "string",
          "enum": [
            "[videoleap_template",
            " tutorial]"
          ],
          "x-go-name": "Type"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-content/pkg/api/post/http_model"
    },
    "GetVideoleapTemplatePostResponse": {
      "type": "object",
      "required": [
        "id",
        "preview_media",
        "type",
        "creation_date_ms",
        "is_pro",
        "template_id",
        "number_of_clips_used",
        "width",
        "height",
        "duration_ms"
      ],
      "properties": {
        "creation_date_ms": {
          "description": "Epoch time of template creation",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreationDateMS",
          "example": 1634100851
        },
        "creator_profile": {
          "$ref": "#/definitions/CreatorProfile"
        },
        "duration_ms": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "DurationMs"
        },
        "height": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Height"
        },
        "id": {
          "type": "string",
          "x-go-name": "Id"
        },
        "is_pro": {
          "type": "boolean",
          "x-go-name": "IsPro"
        },
        "number_of_clips_used": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "NumberOfClipsUsed"
        },
        "preview_media": {
          "$ref": "#/definitions/Metadata"
        },
        "subtitle": {
          "type": "string",
          "x-go-name": "Subtitle"
        },
        "template_id": {
          "type": "string",
          "x-go-name": "TemplateId"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        },
        "type": {
          "type": "string",
          "enum": [
            "[videoleap_template",
            " tutorial]"
          ],
          "x-go-name": "Type"
        },
        "width": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Width"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-content/pkg/api/post/http_model"
    },
    "HttpInstruction": {
      "description": "HttpInstruction includes instructions for uploading files in http protocol",
      "type": "object",
      "properties": {
        "form_data_parts": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "FormDataParts"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Headers"
        },
        "http_protocol": {
          "type": "string",
          "x-go-name": "HttpProtocol"
        },
        "url": {
          "type": "string",
          "x-go-name": "Url"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "Instruction": {
      "type": "object",
      "properties": {
        "account_id": {
          "type": "string",
          "x-go-name": "AccountId"
        },
        "client_id": {
          "type": "string",
          "x-go-name": "ClientId"
        },
        "http_instruction": {
          "$ref": "#/definitions/HttpInstruction"
        },
        "media_id": {
          "type": "string",
          "x-go-name": "MediaId"
        },
        "media_resource_status": {
          "type": "string",
          "enum": [
            "Started",
            "Uploaded",
            "Ready",
            "Error"
          ],
          "x-go-name": "MediaResourceStatus"
        },
        "resource_type": {
          "description": "Original/thumbnail100_100/transcoded/streamable",
          "type": "string",
          "x-go-name": "ResourceType"
        },
        "token_expiration_at_ms": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "TokenExpirationInMinutes"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "InstructionsGetRequest": {
      "type": "object",
      "required": [
        "file_size",
        "file_content_md5"
      ],
      "properties": {
        "file_content_md5": {
          "description": "in: body",
          "type": "string",
          "x-go-name": "FileContentMd5"
        },
        "file_size": {
          "description": "in: body",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "FileSize"
        },
        "metadata": {
          "$ref": "#/definitions/MetaDataModel"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "MetaDataModel": {
      "type": "object",
      "properties": {
        "animation_type": {
          "type": "string",
          "x-go-name": "AnimationType"
        },
        "audio_channels": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "AudioChannels"
        },
        "audio_sample_rate": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "AudioSampleRate"
        },
        "average_fps": {
          "type": "number",
          "format": "float",
          "x-go-name": "AverageFps"
        },
        "content_type": {
          "type": "string",
          "x-go-name": "ContentType"
        },
        "duration_ms": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "DurationMs"
        },
        "exif_creation_date_ms": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ExifCreationDateMs"
        },
        "height": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Height"
        },
        "local_identifier": {
          "type": "string",
          "x-go-name": "LocalIdentifier"
        },
        "width": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Width"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "account_id": {
          "description": "Account id that uploaded the media",
          "type": "string",
          "x-go-name": "AccountId"
        },
        "media_id": {
          "type": "string",
          "x-go-name": "MediaId"
        },
        "media_resources": {
          "description": "media auto generated files with different protocols. valid only when the status is \"ready\".",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          },
          "x-go-name": "MediaResources"
        },
        "media_status": {
          "type": "string",
          "enum": [
            "Started",
            "Uploaded",
            "Ready",
            "Error"
          ],
          "x-go-name": "MediaStatus"
        },
        "media_type": {
          "type": "string",
          "x-go-name": "MediaType"
        },
        "metadata": {
          "$ref": "#/definitions/MetaDataModel"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "PatchMediaRequestBody": {
      "type": "object",
      "required": [
        "transformation"
      ],
      "properties": {
        "transformation": {
          "description": "in: body",
          "type": "string",
          "x-go-name": "Transformation"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "PostPostRequestBody": {
      "type": "object",
      "required": [
        "preview_video_media_id",
        "creation_date_ms"
      ],
      "properties": {
        "creation_date_ms": {
          "description": "Epoch time of template creation",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreationDateMS",
          "example": 1634100851
        },
        "preview_video_media_id": {
          "type": "string",
          "x-go-name": "PreviewVideoMediaId"
        },
        "subtitle": {
          "type": "string",
          "x-go-name": "Subtitle"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-content/pkg/api/post/http_model"
    },
    "PostTemplateResponseBody": {
      "type": "object",
      "required": [
        "client_version_code",
        "template_asset_id",
        "type",
        "required_capabilities",
        "creation_date_ms",
        "properties"
      ],
      "properties": {
        "client_version_code": {
          "description": "Client version code number. Must be aligned with version specified in register.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ClientVersionCode",
          "example": 1580
        },
        "creation_date_ms": {
          "description": "Epoch time of template creation",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreationDateMS",
          "example": 1634100851
        },
        "media_asset_ids": {
          "description": "Assets associated to the template.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          },
          "x-go-name": "MediaAssetIds"
        },
        "metadata": {
          "description": "A store of key values properties related to the template.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Metadata",
          "example": {
            "embedding": "1000101000",
            "used_features": "sky, stickers, text"
          }
        },
        "parent_template_id": {
          "description": "ID of the template that the current template is based on",
          "type": "string",
          "x-go-name": "ParentTemplateID"
        },
        "properties": {
          "$ref": "#/definitions/VideoleapTemplateProperties"
        },
        "required_capabilities": {
          "description": "List of capabilities codes required by a client to support the template.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "RequiredCapabilities",
          "example": [
            "audio_speed_very_slow",
            "text_shadow_softness"
          ]
        },
        "template_asset_id": {
          "description": "Media id of the file containing the template definition.",
          "type": "string",
          "x-go-name": "TemplateAssetId",
          "example": "=AB\u002612345"
        },
        "template_id": {
          "description": "Optional identifier for template, if nil, an uuid is generated.",
          "type": "string",
          "x-go-name": "TemplateId",
          "example": "0e3c5cde-55a0-11ec-bf63-0242ac130002"
        },
        "type": {
          "description": "Defines the type of the template.",
          "type": "string",
          "x-go-name": "Type",
          "example": "videoleap_template"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-content/pkg/api/template/http_model"
    },
    "PostVideoleapTemplatePostRequestBody": {
      "type": "object",
      "required": [
        "preview_video_media_id",
        "creation_date_ms",
        "template_id",
        "is_pro"
      ],
      "properties": {
        "creation_date_ms": {
          "description": "Epoch time of template creation",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreationDateMS",
          "example": 1634100851
        },
        "is_pro": {
          "type": "boolean",
          "x-go-name": "IsPro"
        },
        "preview_video_media_id": {
          "type": "string",
          "x-go-name": "PreviewVideoMediaId"
        },
        "subtitle": {
          "type": "string",
          "x-go-name": "Subtitle"
        },
        "template_id": {
          "type": "string",
          "x-go-name": "TemplateId"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-content/pkg/api/post/http_model"
    },
    "Resource": {
      "type": "object",
      "properties": {
        "average_fps": {
          "type": "number",
          "format": "float",
          "x-go-name": "AverageFps"
        },
        "codec": {
          "type": "string",
          "x-go-name": "Codec"
        },
        "content_type": {
          "type": "string",
          "x-go-name": "ContentType"
        },
        "height": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Height"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "original",
            "preview",
            "thumbnail",
            "transcoded",
            "streamable"
          ],
          "x-go-name": "ResourceType"
        },
        "url": {
          "type": "string",
          "x-go-name": "Url"
        },
        "width": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Width"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-core/media/pkg/media"
    },
    "StatusResponse": {
      "type": "object",
      "title": "StatusResponse represents body of status response.",
      "properties": {
        "status": {
          "type": "string",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-content/pkg/api"
    },
    "TemplateMediaAsset": {
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/Metadata"
        },
        "asset_key": {
          "type": "string",
          "x-go-name": "AssetKey"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-content/pkg/api/template/http_model"
    },
    "TemplateRequestBody": {
      "type": "object",
      "required": [
        "client_version_code",
        "template_asset_id",
        "type",
        "required_capabilities",
        "creation_date_ms",
        "properties"
      ],
      "properties": {
        "client_version_code": {
          "description": "Client version code number. Must be aligned with version specified in register.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ClientVersionCode",
          "example": 1580
        },
        "creation_date_ms": {
          "description": "Epoch time of template creation",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreationDateMS",
          "example": 1634100851
        },
        "media_asset_ids": {
          "description": "Assets associated to the template.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          },
          "x-go-name": "MediaAssetIds"
        },
        "metadata": {
          "description": "A store of key values properties related to the template.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Metadata",
          "example": {
            "embedding": "1000101000",
            "used_features": "sky, stickers, text"
          }
        },
        "parent_template_id": {
          "description": "ID of the template that the current template is based on",
          "type": "string",
          "x-go-name": "ParentTemplateID"
        },
        "properties": {
          "$ref": "#/definitions/VideoleapTemplateProperties"
        },
        "required_capabilities": {
          "description": "List of capabilities codes required by a client to support the template.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "RequiredCapabilities",
          "example": [
            "audio_speed_very_slow",
            "text_shadow_softness"
          ]
        },
        "template_asset_id": {
          "description": "Media id of the file containing the template definition.",
          "type": "string",
          "x-go-name": "TemplateAssetId",
          "example": "=AB\u002612345"
        },
        "template_id": {
          "description": "Optional identifier for template, if nil, an uuid is generated.",
          "type": "string",
          "x-go-name": "TemplateId",
          "example": "0e3c5cde-55a0-11ec-bf63-0242ac130002"
        },
        "type": {
          "description": "Defines the type of the template.",
          "type": "string",
          "x-go-name": "Type",
          "example": "videoleap_template"
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-content/pkg/api/template/http_model"
    },
    "VideoleapTemplateProperties": {
      "type": "object",
      "required": [
        "width",
        "height",
        "number_of_clips_used",
        "duration_ms"
      ],
      "properties": {
        "duration_ms": {
          "description": "Duration of template in milliseconds.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DurationMs",
          "example": 9000
        },
        "height": {
          "description": "Height of template in pixels.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Height",
          "example": 1080
        },
        "number_of_clips_used": {
          "description": "Number of clips used by the template.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "NumberOfClipsUsed",
          "example": 3
        },
        "width": {
          "description": "Width of template in pixels.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Width",
          "example": 720
        }
      },
      "x-go-package": "github.com/Lightricks/atlas-content/pkg/api/template/http_model"
    }
  },
  "responses": {
    "ErrorWrapper": {
      "description": "Relevant for all error codes (4XX, 5XX). While the message can change the error_code shouldn't (id of the error).",
      "schema": {
        "$ref": "#/definitions/ErrorBody"
      }
    },
    "FileUploadResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/FileUploadResponseBody"
      }
    },
    "InstructionsGetResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Instruction"
      }
    },
    "MediaMetadataGetByIdResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Metadata"
      }
    },
    "MediaMetadataGetResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Metadata"
        }
      }
    },
    "StatusResponse": {
      "description": "",
      "headers": {
        "status": {
          "type": "string"
        }
      }
    },
    "getPostItemResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ExamplePosts"
      },
      "headers": {
        "Body": {}
      }
    },
    "getTemplateResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/GetTemplateResponseBody"
      }
    },
    "postTemplateResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/PostTemplateResponseBody"
      }
    },
    "postTutorialPost": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/GetTutorialPostResponse"
      },
      "headers": {
        "Body": {}
      }
    },
    "postVideoleapTemplatePostResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/GetVideoleapTemplatePostResponse"
      },
      "headers": {
        "Body": {}
      }
    },
    "statusResponse": {
      "description": "Status of profile.",
      "schema": {
        "$ref": "#/definitions/StatusResponse"
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic"
    }
  }
}